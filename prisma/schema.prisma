// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  File     File[]
  Folder   Folder[]
}

model File {
  id            Int      @id @default(autoincrement())
  filename      String
  cloudinary_id String
  url           String
  mimetype      String
  size          Int
  userId        Int
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  folderId      Int?
  folder        Folder?  @relation(fields: [folderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  parentId  Int?
  parent    Folder?  @relation("NestedFolders", fields: [parentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  children  Folder[] @relation("NestedFolders")
  files     File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
